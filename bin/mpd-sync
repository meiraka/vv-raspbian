#!/usr/bin/python3
"""Disk sync after mpd events(playlist/status/database update)."""

import subprocess
import time
import signal
import sys


class App(object):
    def __init__(self):
        self.running = True

    def exit(self, signum, frame):
        self.running = False
        subprocess.check_output('sync', shell=True)
        with open('/sys/class/leds/led0/trigger', 'w') as f:
            f.write("mmc0")
        sys.exit(0)
    
    def run(self):
        while self.running:
            try:
                subprocess.check_output('mpc', shell=True)
                with open('/sys/class/leds/led0/trigger', 'w') as f:
                    f.write("none")
                with open('/sys/class/leds/led0/brightness', 'w') as f:
                    f.write("255")
                while self.running:
                    subprocess.check_output('mpc idle', shell=True)
                    with open('/sys/class/leds/led0/brightness', 'w') as f:
                        f.write("0")
                    time.sleep(1)
                    subprocess.check_output('sync', shell=True)
                    time.sleep(0.5)
                    with open('/sys/class/leds/led0/brightness', 'w') as f:
                        f.write("255")
            except subprocess.CalledProcessError as e:
                pass


if __name__ == '__main__':
    app = App()
    signal.signal(signal.SIGTERM, app.exit)
    signal.signal(signal.SIGINT, app.exit)
    app.run()
